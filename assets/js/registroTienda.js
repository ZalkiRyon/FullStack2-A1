// Registro de clientes desde la tienda
import { obtenerTodosLosUsuarios } from './modules/usuarios.js';

// Validaci√≥n de RUN chileno
var ValidadorRun = {
    limpiarRun: function(run) {
        return run.toString().replace(/[.\s-]/g, '').toUpperCase();
    },
    
    formatoValido: function(run) {
        const runLimpio = this.limpiarRun(run);
        return /^[0-9]{7,8}[0-9K]$/.test(runLimpio);
    },
    
    calcularDV: function(numero) {
        let suma = 0;
        let multiplicador = 2;
        
        for (let i = numero.length - 1; i >= 0; i--) {
            suma += parseInt(numero[i]) * multiplicador;
            multiplicador = multiplicador === 7 ? 2 : multiplicador + 1;
        }
        
        const resto = suma % 11;
        const dv = 11 - resto;
        
        if (dv === 11) return '0';
        if (dv === 10) return 'K';
        return dv.toString();
    },
    
    validar: function(run) {
        if (!run || run.length === 0) return false;
        
        const runLimpio = this.limpiarRun(run);
        
        if (!this.formatoValido(runLimpio)) return false;
        
        const numero = runLimpio.slice(0, -1);
        const dvIngresado = runLimpio.slice(-1);
        const dvCalculado = this.calcularDV(numero);
        
        return dvIngresado === dvCalculado;
    },
    
    formatear: function(run) {
        const runLimpio = this.limpiarRun(run);
        if (runLimpio.length < 8) return run;
        
        const numero = runLimpio.slice(0, -1);
        const dv = runLimpio.slice(-1);
        const numeroFormateado = numero.replace(/\B(?=(\d{3})+(?!\d))/g, '.');
        
        return `${numeroFormateado}-${dv}`;
    }
};

// Validaci√≥n de correo espec√≠fica
function validarCorreo(correo) {
    const dominiosPermitidos = ['@duoc.cl', '@profesor.duoc.cl', '@gmail.com'];
    return dominiosPermitidos.some(dominio => correo.endsWith(dominio));
}

// Validaci√≥n de contrase√±a
function validarContrasena(contrasena) {
    return contrasena.length >= 4 && contrasena.length <= 10;
}

// Validaci√≥n de tel√©fono
function validarTelefono(telefono) {
    return /^\d{0,10}$/.test(telefono);
}

// Datos de regiones y comunas de Chile
const regionesYComunas = {
    "I": {
        "nombre": "Regi√≥n de Tarapac√°",
        "comunas": ["Iquique", "Alto Hospicio", "Pozo Almonte", "Cami√±a", "Colchane", "Huara", "Pica"]
    },
    "II": {
        "nombre": "Regi√≥n de Antofagasta", 
        "comunas": ["Antofagasta", "Mejillones", "Sierra Gorda", "Taltal", "Calama", "Ollag√ºe", "San Pedro de Atacama", "Tocopilla", "Mar√≠a Elena"]
    },
    "III": {
        "nombre": "Regi√≥n de Atacama",
        "comunas": ["Copiap√≥", "Caldera", "Tierra Amarilla", "Cha√±aral", "Diego de Almagro", "Vallenar", "Alto del Carmen", "Freirina", "Huasco"]
    },
    "IV": {
        "nombre": "Regi√≥n de Coquimbo",
        "comunas": ["La Serena", "Coquimbo", "Andacollo", "La Higuera", "Paiguano", "Vicu√±a", "Illapel", "Canela", "Los Vilos", "Salamanca", "Ovalle", "Combarbal√°", "Monte Patria", "Punitaqui", "R√≠o Hurtado"]
    },
    "V": {
        "nombre": "Regi√≥n de Valpara√≠so",
        "comunas": ["Valpara√≠so", "Casablanca", "Conc√≥n", "Juan Fern√°ndez", "Puchuncav√≠", "Quintero", "Vi√±a del Mar", "Isla de Pascua", "Los Andes", "Calle Larga", "Rinconada", "San Esteban", "La Ligua", "Cabildo", "Papudo", "Petorca", "Zapallar", "Quillota", "Calera", "Hijuelas", "La Cruz", "Nogales", "San Antonio", "Algarrobo", "Cartagena", "El Quisco", "El Tabo", "Santo Domingo", "San Felipe", "Catemu", "Llaillay", "Panquehue", "Putaendo", "Santa Mar√≠a", "Quilpu√©", "Limache", "Olmu√©", "Villa Alemana"]
    },
    "RM": {
        "nombre": "Regi√≥n Metropolitana de Santiago",
        "comunas": ["Cerrillos", "Cerro Navia", "Conchal√≠", "El Bosque", "Estaci√≥n Central", "Huechuraba", "Independencia", "La Cisterna", "La Florida", "La Granja", "La Pintana", "La Reina", "Las Condes", "Lo Barnechea", "Lo Espejo", "Lo Prado", "Macul", "Maip√∫", "√ëu√±oa", "Pedro Aguirre Cerda", "Pe√±alol√©n", "Providencia", "Pudahuel", "Quilicura", "Quinta Normal", "Recoleta", "Renca", "Santiago", "San Joaqu√≠n", "San Miguel", "San Ram√≥n", "Vitacura", "Puente Alto", "Pirque", "San Jos√© de Maipo", "Colina", "Lampa", "Tiltil", "San Bernardo", "Buin", "Calera de Tango", "Paine", "Melipilla", "Alhu√©", "Curacav√≠", "Mar√≠a Pinto", "San Pedro", "Talagante", "El Monte", "Isla de Maipo", "Padre Hurtado", "Pe√±aflor"]
    },
    "VI": {
        "nombre": "Regi√≥n del Libertador General Bernardo O'Higgins",
        "comunas": ["Rancagua", "Codegua", "Coinco", "Coltauco", "Do√±ihue", "Graneros", "Las Cabras", "Machal√≠", "Malloa", "Mostazal", "Olivar", "Peumo", "Pichidegua", "Quinta de Tilcoco", "Rengo", "Requ√≠noa", "San Vicente", "Pichilemu", "La Estrella", "Litueche", "Marchihue", "Navidad", "Paredones", "San Fernando", "Ch√©pica", "Chimbarongo", "Lolol", "Nancagua", "Palmilla", "Peralillo", "Placilla", "Pumanque", "Santa Cruz"]
    },
    "VII": {
        "nombre": "Regi√≥n del Maule",
        "comunas": ["Talca", "Constituci√≥n", "Curepto", "Empedrado", "Maule", "Pelarco", "Pencahue", "R√≠o Claro", "San Clemente", "San Rafael", "Cauquenes", "Chanco", "Pelluhue", "Curic√≥", "Huala√±√©", "Licant√©n", "Molina", "Rauco", "Romeral", "Sagrada Familia", "Teno", "Vichuqu√©n", "Linares", "Colb√∫n", "Longav√≠", "Parral", "Retiro", "San Javier", "Villa Alegre", "Yerbas Buenas"]
    },
    "VIII": {
        "nombre": "Regi√≥n del Biob√≠o",
        "comunas": ["Concepci√≥n", "Coronel", "Chiguayante", "Florida", "Hualqui", "Lota", "Penco", "San Pedro de la Paz", "Santa Juana", "Talcahuano", "Tom√©", "Hualp√©n", "Lebu", "Arauco", "Ca√±ete", "Contulmo", "Curanilahue", "Los √Ålamos", "Tir√∫a", "Los √Ångeles", "Antuco", "Cabrero", "Laja", "Mulch√©n", "Nacimiento", "Negrete", "Quilaco", "Quilleco", "San Rosendo", "Santa B√°rbara", "Tucapel", "Yumbel", "Alto Biob√≠o", "Chill√°n", "Bulnes", "Cobquecura", "Coelemu", "Coihueco", "Chill√°n Viejo", "El Carmen", "Ninhue", "√ëiqu√©n", "Pemuco", "Pinto", "Portezuelo", "Quill√≥n", "Quirihue", "R√°nquil", "San Carlos", "San Fabi√°n", "San Ignacio", "San Nicol√°s", "Treguaco", "Yungay"]
    },
    "IX": {
        "nombre": "Regi√≥n de la Araucan√≠a",
        "comunas": ["Temuco", "Carahue", "Cunco", "Curarrehue", "Freire", "Galvarino", "Gorbea", "Lautaro", "Loncoche", "Melipeuco", "Nueva Imperial", "Padre las Casas", "Perquenco", "Pitrufqu√©n", "Puc√≥n", "Saavedra", "Teodoro Schmidt", "Tolt√©n", "Vilc√∫n", "Villarrica", "Cholchol", "Angol", "Collipulli", "Curacaut√≠n", "Ercilla", "Lonquimay", "Los Sauces", "Lumaco", "Pur√©n", "Renaico", "Traigu√©n", "Victoria"]
    },
    "XIV": {
        "nombre": "Regi√≥n de Los R√≠os",
        "comunas": ["Valdivia", "Corral", "Lanco", "Los Lagos", "M√°fil", "Mariquina", "Paillaco", "Panguipulli", "La Uni√≥n", "Futrono", "Lago Ranco", "R√≠o Bueno"]
    },
    "X": {
        "nombre": "Regi√≥n de Los Lagos",
        "comunas": ["Puerto Montt", "Calbuco", "Cocham√≥", "Fresia", "Frutillar", "Los Muermos", "Llanquihue", "Maull√≠n", "Puerto Varas", "Castro", "Ancud", "Chonchi", "Curaco de V√©lez", "Dalcahue", "Puqueld√≥n", "Queil√©n", "Quell√≥n", "Quemchi", "Quinchao", "Osorno", "Puerto Octay", "Purranque", "Puyehue", "R√≠o Negro", "San Juan de la Costa", "San Pablo", "Chait√©n", "Futaleuf√∫", "Hualaihu√©", "Palena"]
    },
    "XI": {
        "nombre": "Regi√≥n Ays√©n del General Carlos Ib√°√±ez del Campo",
        "comunas": ["Coyhaique", "Lago Verde", "Ays√©n", "Cisnes", "Guaitecas", "Cochrane", "O'Higgins", "Tortel", "Chile Chico", "R√≠o Ib√°√±ez"]
    },
    "XII": {
        "nombre": "Regi√≥n de Magallanes y de la Ant√°rtica Chilena",
        "comunas": ["Punta Arenas", "Laguna Blanca", "R√≠o Verde", "San Gregorio", "Cabo de Hornos", "Ant√°rtica", "Porvenir", "Primavera", "Timaukel", "Natales", "Torres del Paine"]
    },
    "XV": {
        "nombre": "Regi√≥n de Arica y Parinacota",
        "comunas": ["Arica", "Camarones", "Putre", "General Lagos"]
    }
};

// Inicializaci√≥n del DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üéØ Registro de tienda cargado');
    
    // Cargar regiones en el select
    cargarRegiones();
    
    // Configurar eventos
    configurarEventos();
    
    // Configurar validaci√≥n del formulario
    configurarValidacionFormulario();
});

function cargarRegiones() {
    const selectRegion = document.getElementById('direccionRegion');
    if (!selectRegion) return;
    
    // Limpiar opciones existentes (excepto la primera)
    selectRegion.innerHTML = '<option value="">Seleccionar regi√≥n...</option>';
    
    // Agregar regiones
    Object.keys(regionesYComunas).forEach(codigo => {
        const option = document.createElement('option');
        option.value = codigo;
        option.textContent = regionesYComunas[codigo].nombre;
        selectRegion.appendChild(option);
    });
}

function cargarComunas(codigoRegion) {
    const selectComuna = document.getElementById('direccionComuna');
    if (!selectComuna) return;
    
    // Limpiar opciones
    selectComuna.innerHTML = '<option value="">Seleccionar comuna...</option>';
    
    if (!codigoRegion || !regionesYComunas[codigoRegion]) return;
    
    // Agregar comunas de la regi√≥n seleccionada
    regionesYComunas[codigoRegion].comunas.forEach(comuna => {
        const option = document.createElement('option');
        option.value = comuna;
        option.textContent = comuna;
        selectComuna.appendChild(option);
    });
}

function configurarEventos() {
    // Evento cambio de regi√≥n
    const selectRegion = document.getElementById('direccionRegion');
    if (selectRegion) {
        selectRegion.addEventListener('change', function() {
            cargarComunas(this.value);
        });
    }
    
    // Formateo autom√°tico del RUN
    const inputRun = document.getElementById('run');
    if (inputRun) {
        inputRun.addEventListener('input', function() {
            if (this.value) {
                this.value = ValidadorRun.formatear(this.value);
            }
        });
    }
    
    // Validaci√≥n de tel√©fono
    const inputTelefono = document.getElementById('telefono');
    if (inputTelefono) {
        inputTelefono.addEventListener('input', function() {
            this.value = this.value.replace(/\D/g, '').substring(0, 10);
        });
    }
}

function configurarValidacionFormulario() {
    const form = document.getElementById('registroTiendaForm');
    if (!form) return;
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        manejarRegistro();
    });
}

async function manejarRegistro() {
    console.log('üîÑ Procesando registro de cliente...');
    
    // Obtener datos del formulario
    const datosFormulario = obtenerDatosFormulario();
    
    // Validar datos
    const validacion = validarDatosRegistro(datosFormulario);
    if (!validacion.valido) {
        alert(`Error de validaci√≥n: ${validacion.mensaje}`);
        return;
    }
    
    // Verificar que no exista usuario con mismo correo o RUN
    if (await verificarUsuarioExistente(datosFormulario.correo, datosFormulario.run)) {
        alert('Ya existe un usuario registrado con este correo o RUN.');
        return;
    }
    
    // Crear objeto usuario para cliente
    const nuevoCliente = crearObjetoCliente(datosFormulario);
    
    // Guardar en localStorage
    if (guardarNuevoCliente(nuevoCliente)) {
        alert('¬°Cliente registrado exitosamente! Ya puedes iniciar sesi√≥n.');
        limpiarFormulario();
        // Redirigir a inicio de sesi√≥n
        setTimeout(() => {
            window.location.href = 'inicioSesion.html';
        }, 1000);
    } else {
        alert('Error al guardar el cliente. Por favor, int√©ntalo de nuevo.');
    }
}

function obtenerDatosFormulario() {
    return {
        nombre: document.getElementById('nombre').value.trim(),
        apellido: document.getElementById('apellido').value.trim(),
        run: document.getElementById('run').value.trim(),
        fechaNacimiento: document.getElementById('fechaNacimiento').value,
        correo: document.getElementById('correo').value.trim().toLowerCase(),
        telefono: document.getElementById('telefono').value.trim(),
        contrasena: document.getElementById('contrasena').value,
        confirmarContrasena: document.getElementById('confirmarContrasena').value,
        direccionRegion: document.getElementById('direccionRegion').value,
        direccionComuna: document.getElementById('direccionComuna').value,
        direccion: document.getElementById('direccion').value.trim()
    };
}

function validarDatosRegistro(datos) {
    // Validar campos obligatorios
    if (!datos.nombre || !datos.apellido || !datos.run || !datos.correo || 
        !datos.contrasena || !datos.confirmarContrasena || !datos.direccionRegion || 
        !datos.direccionComuna || !datos.direccion) {
        return { valido: false, mensaje: 'Todos los campos obligatorios deben estar completos.' };
    }
    
    // Validar RUN
    if (!ValidadorRun.validar(datos.run)) {
        return { valido: false, mensaje: 'El RUN ingresado no es v√°lido.' };
    }
    
    // Validar correo
    if (!validarCorreo(datos.correo)) {
        return { valido: false, mensaje: 'Solo se permiten correos con dominios @duoc.cl, @profesor.duoc.cl o @gmail.com' };
    }
    
    // Validar contrase√±a
    if (!validarContrasena(datos.contrasena)) {
        return { valido: false, mensaje: 'La contrase√±a debe tener entre 4 y 10 caracteres.' };
    }
    
    // Validar confirmaci√≥n de contrase√±a
    if (datos.contrasena !== datos.confirmarContrasena) {
        return { valido: false, mensaje: 'Las contrase√±as no coinciden.' };
    }
    
    // Validar tel√©fono si se proporciona
    if (datos.telefono && !validarTelefono(datos.telefono)) {
        return { valido: false, mensaje: 'El tel√©fono debe contener solo n√∫meros y m√°ximo 10 d√≠gitos.' };
    }
    
    return { valido: true };
}

async function verificarUsuarioExistente(correo, run) {
    try {
        const todosLosUsuarios = await obtenerTodosLosUsuarios();
        return todosLosUsuarios.some(usuario => 
            usuario.correo.toLowerCase() === correo.toLowerCase() || 
            ValidadorRun.limpiarRun(usuario.run) === ValidadorRun.limpiarRun(run)
        );
    } catch (error) {
        console.error('Error al verificar usuario existente:', error);
        return false;
    }
}

function crearObjetoCliente(datos) {
    // Obtener el pr√≥ximo ID
    const usuariosRegistrados = JSON.parse(localStorage.getItem('usuariosRegistrados')) || [];
    let proximoId = 11; // Empezar despu√©s de los usuarios del sistema (1-10)
    
    if (usuariosRegistrados.length > 0) {
        const maxId = Math.max(...usuariosRegistrados.map(u => u.id || 0));
        proximoId = Math.max(proximoId, maxId + 1);
    }
    
    return {
        id: proximoId,
        nombre: datos.nombre,
        apellido: datos.apellido,
        run: ValidadorRun.formatear(datos.run),
        fechaNacimiento: datos.fechaNacimiento || null,
        tipoUsuario: 'cliente', // Asignado autom√°ticamente
        correo: datos.correo,
        telefono: datos.telefono || null,
        contrasena: datos.contrasena,
        direccionRegion: datos.direccionRegion,
        direccionComuna: datos.direccionComuna,
        direccion: datos.direccion,
        comentario: 'Cliente sin comentario', // Asignado autom√°ticamente
        fechaRegistro: new Date().toISOString()
    };
}

function guardarNuevoCliente(cliente) {
    try {
        const usuariosRegistrados = JSON.parse(localStorage.getItem('usuariosRegistrados')) || [];
        usuariosRegistrados.push(cliente);
        localStorage.setItem('usuariosRegistrados', JSON.stringify(usuariosRegistrados));
        
        console.log('‚úÖ Cliente guardado:', cliente);
        return true;
    } catch (error) {
        console.error('‚ùå Error al guardar cliente:', error);
        return false;
    }
}

function limpiarFormulario() {
    const form = document.getElementById('registroTiendaForm');
    if (form) {
        form.reset();
        // Resetear select de comunas
        const selectComuna = document.getElementById('direccionComuna');
        if (selectComuna) {
            selectComuna.innerHTML = '<option value="">Seleccionar comuna...</option>';
        }
    }
}